/// <reference types="node" />
import * as pkcs11 from "pkcs11js";
import { IParams, MechParams } from "../params";
/**
 * AES-CCM parameters
 */
export declare class AesCcmParams implements IParams {
    /**
     * Length of the data where 0 <= dataLength < 2^8L
     */
    dataLength: number;
    /**
     * The nonce
     */
    nonce: Buffer;
    /**
     * The additional authentication data
     * - This data is authenticated but not encrypted
     */
    aad: Buffer;
    /**
     * Length of authentication tag (output following cipher text) in bits.
     * - Can be any value between 0 and 128
     */
    macLength: number;
    type: MechParams;
    /**
     * Creates a new instance of {@link AesCcmParams}
     * @param dataLength Length of the data where 0 <= dataLength < 2^8L
     * @param nonce The nonce
     * @param aad The additional authentication data
     * @param macLength Length of authentication tag (output following cipher text) in bits. Can be any value between 0 and 128
     */
    constructor(dataLength: number, nonce: Buffer, aad?: Buffer, macLength?: number);
    toCKI(): pkcs11.AesCCM;
}
