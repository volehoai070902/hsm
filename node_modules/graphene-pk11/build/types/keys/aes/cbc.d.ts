/// <reference types="node" />
import * as pkcs11 from "pkcs11js";
import { IParams, MechParams } from "../params";
/**
 * AES-CBC parameters
 */
export declare class AesCbcParams implements IParams, pkcs11.AesCBC {
    /**
     * Initialization vector
     * - must have a fixed size of 16 bytes
     */
    iv: Buffer;
    /**
     * The data
     */
    data: Buffer;
    type: MechParams;
    /**
     * Creates a new instance of AES-CBC parameters
     * @param iv The initialization vector. Must have a fixed size of 16 bytes
     * @param data The data
     */
    constructor(iv: Buffer, data?: Buffer);
    toCKI(): Buffer;
}
/**
 * AES-CBC encrypted data parameters
 */
export declare class AesCbcEncryptDataParams implements IParams, pkcs11.AesCBC {
    /**
     * Initialization vector
     * - must have a fixed size of 16 bytes
     */
    iv: Buffer;
    /**
     * The data
     */
    data: Buffer;
    type: MechParams;
    /**
     * Creates a new instance of {@link AesCbcEncryptDataParams}
     * @param iv The initialization vector. Must have a fixed size of 16 bytes
     * @param data The data
     */
    constructor(iv: Buffer, data?: Buffer);
    toCKI(): pkcs11.AesCBC;
}
