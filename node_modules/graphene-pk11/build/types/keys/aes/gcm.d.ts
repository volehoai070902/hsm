/// <reference types="node" />
import * as pkcs11 from "pkcs11js";
import { IParams, MechParams } from "../params";
/**
 * AES-GCM parameters
 */
export declare class AesGcmParams implements IParams {
    /**
     * Initialization vector
     * - The length of the initialization vector can be any number between 1 and 256.
     * 96-bit (12 byte) IV values can be processed more efficiently,
     * so that length is recommended for situations in which efficiency is critical.
     */
    iv: Buffer;
    /**
     * The additional authentication data.
     * This data is authenticated but not encrypted.
     */
    aad: Buffer;
    /**
     * The length of authentication tag (output following cipher text) in bits.
     * Can be any value between 0 and 128. Default 128
     */
    tagBits: number;
    type: MechParams;
    /**
     * Creates a new instance of {@link AesGcmParams}
     * @param iv The initialization vector
     * @param aad The additional authentication data
     * @param tagBits The length of authentication tag (output following cipher text) in bits. Can be any value between 0 and 128
     */
    constructor(iv: Buffer, aad?: Buffer, tagBits?: number);
    toCKI(): pkcs11.AesGCM;
}
/**
 * AES-GCM parameters for Cryptoki v2.40
 */
export declare class AesGcm240Params extends AesGcmParams {
    type: MechParams;
}
