import * as pkcs11 from "pkcs11js";
import { MechanismEnum } from "../../mech_enum";
import { IParams, MechParams } from "../params";
import { RsaMgf } from "./mgf";
/**
 * RSA-PSS parameters
 */
export declare class RsaPssParams implements IParams {
    /**
     * Hash algorithm used in the PSS encoding;
     * - if the signature mechanism does not include message hashing,
     * then this value must be the mechanism used by the application to generate
     * the message hash;
     * - if the signature mechanism includes hashing,
     * then this value must match the hash algorithm indicated
     * by the signature mechanism
     */
    hashAlgorithm: MechanismEnum;
    /**
     * Mask generation function to use on the encoded block
     */
    mgf: RsaMgf;
    /**
     * Length, in bytes, of the salt value used in the PSS encoding;
     * - typical values are the length of the message hash and zero
     */
    saltLength: number;
    type: MechParams;
    /**
     * Creates a new instance of {@link RsaPssParams}
     * @param hashAlg Hash algorithm used in the PSS encoding
     * @param mgf Mask generation function to use on the encoded block
     * @param saltLen Length, in bytes, of the salt value used in the PSS encoding
     */
    constructor(hashAlg?: MechanismEnum, mgf?: RsaMgf, saltLen?: number);
    toCKI(): pkcs11.RsaPSS;
}
