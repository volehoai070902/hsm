/// <reference types="node" />
import * as pkcs11 from "pkcs11js";
/**
 * ID of PKCS#11 object
 */
export declare type Handle = Buffer;
/**
 * Base class for all PKCS#11 objects
 */
export declare class BaseObject {
    /**
     * PKCS#11 module
     */
    lib: pkcs11.PKCS11;
    /**
     * Initialize a new instance of PKCS#11 object
     * @param lib PKCS#11 module
     */
    constructor(lib: pkcs11.PKCS11);
}
/**
 * Base class for all PKCS#11 objects with IDs
 */
export declare abstract class HandleObject extends BaseObject {
    /**
     * ID of PKCS#11 object
     */
    handle: Handle;
    /**
     * Initialize a new instance of object
     * @param handle ID of PKCS#11 object
     * @param lib PKCS#11 module
     */
    constructor(handle: Handle, lib: pkcs11.PKCS11);
    /**
     * Retrieves information about PKCS#11 object and fills fields
     */
    protected abstract getInfo(): void;
}
/**
 * Constructor declaration of {@link HandleObject}
 */
export declare type HandleObjectConstructor<T extends HandleObject> = new (handle: pkcs11.Handle, lib: pkcs11.PKCS11) => T;
