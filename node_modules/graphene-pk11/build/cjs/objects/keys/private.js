"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateKey = void 0;
const tslib_1 = require("tslib");
const core_1 = require("../../core");
const key_1 = require("./key");
class PrivateKey extends key_1.Key {
    get template() {
        throw new Error("Not implemented");
    }
    set template(v) {
        throw new Error("Not implemented");
    }
}
tslib_1.__decorate([
    (0, core_1.attribute)("subject")
], PrivateKey.prototype, "subject", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("sensitive")
], PrivateKey.prototype, "sensitive", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("decrypt", false)
], PrivateKey.prototype, "decrypt", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("sign", false)
], PrivateKey.prototype, "sign", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("signRecover", false)
], PrivateKey.prototype, "signRecover", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("unwrap", false)
], PrivateKey.prototype, "unwrap", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("extractable", false)
], PrivateKey.prototype, "extractable", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("alwaysSensitive", false)
], PrivateKey.prototype, "alwaysSensitive", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("neverExtractable", false)
], PrivateKey.prototype, "neverExtractable", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("wrapWithTrusted", false)
], PrivateKey.prototype, "wrapTrusted", void 0);
tslib_1.__decorate([
    (0, core_1.attribute)("alwaysAuth", false)
], PrivateKey.prototype, "alwaysAuthenticate", void 0);
exports.PrivateKey = PrivateKey;
