import { getAttribute } from "../template";
export function attribute(name, defaultValue) {
    return (target, propertyKey) => {
        getAttribute(name);
        const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey) || {};
        descriptor.get = function () {
            if (defaultValue !== undefined) {
                try {
                    return this.get(name);
                }
                catch (_a) {
                    return defaultValue;
                }
            }
            return this.get(name);
        };
        descriptor.set = function (value) {
            this.set(name, value);
        };
        Object.defineProperty(target, propertyKey, descriptor);
    };
}
