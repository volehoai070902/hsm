import * as object from "./object";
export class Collection extends object.BaseObject {
    constructor(items, lib, classType) {
        super(lib);
        this.innerItems = items;
        this.lib = lib;
        this.classType = classType;
    }
    get length() {
        return this.innerItems.length;
    }
    items(index) {
        const handle = this.innerItems[index];
        return new this.classType(handle, this.lib);
    }
    indexOf(obj, fromIndex = 0) {
        if (obj.lib.libPath === obj.lib.libPath) {
            for (let i = fromIndex; i < this.innerItems.length; i++) {
                const item = this.items(i);
                if (item.handle.equals(obj.handle)) {
                    return i;
                }
            }
        }
        return -1;
    }
    [Symbol.iterator]() {
        let pointer = 0;
        const _this = this;
        return {
            next() {
                if (pointer < _this.innerItems.length) {
                    return {
                        done: false,
                        value: _this.items(pointer++)
                    };
                }
                else {
                    return {
                        done: true,
                        value: null
                    };
                }
            }
        };
    }
}
