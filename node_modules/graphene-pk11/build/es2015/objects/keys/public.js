import { __decorate } from "tslib";
import { attribute } from "../../core";
import { Key } from "./key";
export class PublicKey extends Key {
    get template() {
        throw new Error("Not implemented");
    }
    set template(v) {
        throw new Error("Not implemented");
    }
}
__decorate([
    attribute("subject")
], PublicKey.prototype, "subject", void 0);
__decorate([
    attribute("encrypt", false)
], PublicKey.prototype, "encrypt", void 0);
__decorate([
    attribute("verify", false)
], PublicKey.prototype, "verify", void 0);
__decorate([
    attribute("verifyRecover", false)
], PublicKey.prototype, "verifyRecover", void 0);
__decorate([
    attribute("wrap", false)
], PublicKey.prototype, "wrap", void 0);
__decorate([
    attribute("trusted", false)
], PublicKey.prototype, "trusted", void 0);
