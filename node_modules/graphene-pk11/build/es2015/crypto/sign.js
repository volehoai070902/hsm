import * as core from "../core";
import * as mech from "../mech";
export class Sign extends core.BaseObject {
    constructor(session, alg, key, lib) {
        super(lib);
        this.session = session;
        this.init(alg, key);
    }
    update(data) {
        try {
            const bytes = Buffer.from(data);
            this.lib.C_SignUpdate(this.session.handle, bytes);
        }
        catch (e) {
            try {
                this.final();
            }
            catch (e) {
            }
            throw e;
        }
    }
    final() {
        const sig = Buffer.alloc(1024);
        const res = this.lib.C_SignFinal(this.session.handle, sig);
        return res;
    }
    once(data, cb) {
        const signature = Buffer.alloc(1024);
        const bytes = Buffer.from(data);
        if (cb) {
            this.lib.C_Sign(this.session.handle, bytes, signature, cb);
        }
        else {
            return this.lib.C_Sign(this.session.handle, bytes, signature);
        }
    }
    init(alg, key) {
        const pMech = mech.Mechanism.create(alg);
        this.lib.C_SignInit(this.session.handle, pMech, key.handle);
    }
}
